"use strict";function _toConsumableArray(r){if(Array.isArray(r)){for(var e=0,n=Array(r.length);e<r.length;e++)n[e]=r[e];return n}return Array.from(r)}var TEXT={elementNotAnArray:"ELEMENT_NOT_AN_ARRAY | Element is not an Array and will be ignored! |",elementNotOnlyNumbers:"ELEMENT_NOT_ONLY_NUMBER | Element does not contains only number and will be ignored! |"},isNaN=function(r){return"number"!=typeof r},isArrayWithNumbers=function(r){return!1===Array.isArray(r)?(console.warn(TEXT.elementNotAnArray,r),!1):!1!=(!r.some(isNaN)&&0!==r.length)||(console.warn(TEXT.elementNotOnlyNumbers,r),!1)},isPrimeNumber=function(r){for(var e=Math.abs(r),n=2;n<e;n+=1)if(e%n==0)return!1;return 1<e},getUniqueNumbers=function(r,e){return[].concat(_toConsumableArray(new Set([].concat(_toConsumableArray(r),_toConsumableArray(e)))))},sortASC=function(r,e){return r-e};function primeNumbersFromArrays(){for(var r=arguments.length,e=Array(r),n=0;n<r;n++)e[n]=arguments[n];return e.filter(isArrayWithNumbers).reduce(getUniqueNumbers,[]).filter(isPrimeNumber).sort(sortASC)}module.exports=primeNumbersFromArrays;