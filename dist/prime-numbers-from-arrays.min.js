"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r)){for(var e=0,t=new Array(r.length);e<r.length;e++)t[e]=r[e];return t}}var isArrayWithNumbers=function(r){return Array.isArray(r)&&r.every(Number.isInteger)},isPrimeNumber=function(r){if(r<4)return 1<r;if(r%2==0||r%3==0)return!1;for(var e=5,t=Math.round(Math.sqrt(r));e<=t;e+=4){if(r%e==0)return!1;if(r%(e+=2)==0)return!1}return!0},getUniqueNumbers=function(r,e){return _toConsumableArray(new Set([].concat(_toConsumableArray(r),_toConsumableArray(e))))},sortASC=function(r,e){return r-e};function primeNumbersFromArrays(){for(var r=arguments.length,e=new Array(r),t=0;t<r;t++)e[t]=arguments[t];return e.filter(isArrayWithNumbers).reduce(getUniqueNumbers,[]).filter(isPrimeNumber).sort(sortASC)}module.exports=primeNumbersFromArrays;